{"version":3,"sources":["components/ImageViewer.js","components/Abi.js","components/Bytecode.js","components/HomePage.js","components/App.js","serviceWorker.js","index.js"],"names":["ipfsClient","require","config","ipfs","host","port","protocol","apiPath","ImageViewer","props","captureFile","event","console","log","state","image","preventDefault","temp","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","file","description","address","name","symbol","contract_address","transactionHash","deployed_address","uploadFile","bind","deploySmartContract","a","ethereum","request","method","provider","providers","Web3Provider","getSigner","signer","getAddress","signersAddress","factory","ContractFactory","deploy","this","InterPlan721","attach","metaData","add","pin","result","path","image_path","jsonDATA","JSON","parse","stringify","meta","imageURI","tokenURI","mintInterPlan721","hash","View","style","flex","alignItems","justifyContent","Button","title","onPress","navigation","navigate","onSubmit","temp_name","value","temp_symbol","className","id","type","placeholder","required","ref","input","temp_contract_address","temp_description","accept","onChange","Component","HomePage","class","href","App","AppContainer","AppNavigator","createStackNavigator","Home","screen","Image","createAppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","root","document","getElementById","ReactDOM","render","basename","process","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38f6377b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button, View} from 'react-native';\r\nimport {ContractFactory, providers} from 'ethers';\r\nimport bytecode from './Bytecode.js'; \r\nimport abi from './Abi.js'; \r\nconst ipfsClient = require('ipfs-http-client')\r\nrequire('dotenv').config();\r\nconst ipfs = ipfsClient({host: 'ipfs.infura.io', port: 5001, protocol: 'https', apiPath: '/api/v0'}) \r\n\r\n\r\n\r\nclass ImageViewer extends Component {\r\n\r\n\r\n  async deploySmartContract () {\r\n\r\n    await window.ethereum.request({method: 'eth_requestAccounts'});\r\n    const provider = new providers.Web3Provider(window.ethereum);\r\n\r\n    const signer = await provider.getSigner()\r\n    const signersAddress = await signer.getAddress()\r\n    console.log(\"Account:\", signersAddress);\r\n\r\n    const factory = new ContractFactory(abi(), bytecode(), signer)\r\n    const InterPlan721 = await factory.deploy(this.state.name, this.state.symbol);\r\n    console.log(\"Contract Address:\", InterPlan721.address);\r\n    this.setState({\r\n        deployed_address: InterPlan721.address\r\n      })\r\n    }\r\n\r\n\r\n\r\n  async uploadFile () {\r\n\r\n    await window.ethereum.request({method: 'eth_requestAccounts'});\r\n    const provider = new providers.Web3Provider(window.ethereum);\r\n\r\n    const signer = await provider.getSigner()\r\n    const signersAddress = await signer.getAddress()\r\n    console.log(\"Account:\", signersAddress);\r\n\r\n    const factory = new ContractFactory(abi(), bytecode(), signer).attach(this.state.contract_address)\r\n    var image_path;\r\n    \r\n    console.log(\"Submitting file to IPFS...\")\r\n    var metaData = '{ ';\r\n    for await (var result of ipfs.add(this.state.file, { pin: true }))\r\n    {\r\n      console.log('hash ', result.path)\r\n      metaData +=  '\\n' + '\\t' + '\"' + 'name' + '\"'  + ':' + \" \" + '\"' +  'Hex Profile Pic'  +  '\"' + ', ';\r\n      metaData +=  '\\n' + '\\t' + '\"' + 'description' + '\"'  + ':' + \" \" + '\"' +  this.state.description + '\"' + ', ';\r\n      metaData +=  '\\n' + '\\t' + '\"' + 'symbol' + '\"'  + ':' + \" \" + '\"' + 'HXP' +  '\"' + ', ';\r\n      metaData +=  '\\n' + '\\t' + '\"' + 'image' + '\"'  + ':' + \" \" + '\"' + 'ipfs://' + result.path + '\"';// + ', ';\r\n      metaData += '\\n' + '}';\r\n      image_path = result.path\r\n    }\r\n    console.log(metaData)\r\n    console.log(\"Submitting file to IPFS...\")\r\n    const jsonDATA = JSON.parse(metaData);\r\n    for await (var meta of ipfs.add(JSON.stringify(jsonDATA), { pin: true }))\r\n    {\r\n      console.log(signersAddress)\r\n      const imageURI = 'https://ipfs.io/ipfs/' + image_path\r\n      const tokenURI = 'https://ipfs.io/ipfs/' + meta.path\r\n      console.log('URL: ', tokenURI)\r\n      console.log('image: ', imageURI)\r\n      const InterPlan721 = await factory.mintInterPlan721(signersAddress, tokenURI);\r\n      console.log(\"Transaction Hash:\\t\", InterPlan721.hash)\r\n      this.setState({\r\n        transactionHash: InterPlan721.hash\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  captureFile = event => \r\n  {\r\n    console.log('capturing ', this.state.image)\r\n    event.preventDefault()\r\n    const temp = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(temp)\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({ file: temp })\r\n      console.log('file', temp)\r\n    }\r\n  }\r\n\r\n  constructor(props) \r\n  {\r\n    super(props)\r\n    this.state = \r\n    {\r\n      description: null,\r\n      file: null,\r\n      address: null,\r\n      name: null,\r\n      symbol: null,\r\n      contract_address: null,\r\n      transactionHash: null,\r\n      deployed_address: null,\r\n    }\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n    this.deploySmartContract = this.deploySmartContract.bind(this)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n  \r\n      <h1>InterPlanetary Image</h1>\r\n\r\n      <h8></h8>\r\n      <Button\r\n      title=\"Home Page\"\r\n      onPress={() => this.props.navigation.navigate('Home')}\r\n      />\r\n\r\n\r\n    <form onSubmit={(event) => {\r\n      event.preventDefault()\r\n      const temp_name = this.name.value\r\n      const temp_symbol = this.symbol.value\r\n      this.setState({\r\n        name: temp_name,\r\n        symbol: temp_symbol\r\n      })\r\n      this.deploySmartContract()\r\n    }}>\r\n\r\n\r\n    <div className=\"form-group mr-sm-2\">\r\n\r\n    <div className=\"form-group mr-sm-2\"></div>\r\n    <input\r\n      id= 'name'   \r\n      type=\"text\"\r\n      className=\"form-control-sm\"\r\n      placeholder=\"Name of Smart Contract\"\r\n      required\r\n      ref={(input) => {this.name = input}}\r\n    />\r\n\r\n\r\n    <div className=\"form-group mr-sm-2\"></div>\r\n    <input\r\n      id= 'symbol'   \r\n      type=\"text\"\r\n      className=\"form-control-sm\"\r\n      placeholder=\"Symbol of Smart Contract\"\r\n      required\r\n      ref={(input) => {this.symbol = input}}\r\n    />\r\n\r\n    <div className=\"form-group mr-sm-2\"></div>\r\n    <input\r\n      type='submit'\r\n      className='btn btn-block btn-primary'\r\n      value='Deploy Smart Contract'\r\n    />\r\n    </div></form>\r\n\r\n    <div>Contract Address Hash: {this.state.deployed_address}</div>\r\n\r\n\r\n\r\n    <form onSubmit={(event) => {\r\n        event.preventDefault()\r\n        const temp_contract_address = this.contract_address.value\r\n        const temp_description = this.description.value\r\n        this.setState({\r\n          description: temp_description,\r\n          contract_address: temp_contract_address\r\n        })\r\n        this.uploadFile()\r\n      }}>\r\n\r\n\r\n\r\n      <input \r\n        type='file' \r\n        accept=\".jpg, .png, .jpeg\" \r\n        onChange={this.captureFile}\r\n      />\r\n      <div className=\"form-group mr-sm-2\">\r\n      <h1> </h1>\r\n\r\n      <div className=\"form-group mr-sm-2\"></div>\r\n      <input\r\n        id= 'contract_address'   \r\n        type=\"text\"\r\n        className=\"form-control-sm\"\r\n        placeholder=\"Address of smart contract\"\r\n        required\r\n        ref={(input) => {this.contract_address = input}}\r\n      />\r\n\r\n\r\n      <div className=\"form-group mr-sm-2\"></div>\r\n      <input\r\n        id= 'description'   \r\n        type=\"text\"\r\n        className=\"form-control-sm\"\r\n        placeholder=\"Description of NFT\"\r\n        required\r\n        ref={(input) => {this.description = input}}\r\n      />\r\n\r\n      <div className=\"form-group mr-sm-2\"></div>\r\n      <input\r\n      type='submit'\r\n      className='btn btn-block btn-primary'\r\n      value='Mint NFT'\r\n      />\r\n      </div></form>\r\n\r\n      <div>Transaction Hash:{this.state.transactionHash}</div>\r\n      <div>Use this hash in a website that can ether scan to find tokenID and for more information.</div>   \r\n    </View>\r\n    )\r\n  }\r\n}\r\nexport default ImageViewer;","export default function bytecode()\r\n{\r\n    return [\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"symbol\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"approved\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": false,\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"ApprovalForAll\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"address\",\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"indexed\": true,\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"getApproved\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"name\": \"isApprovedForAll\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"owner\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"tokenURI\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"mintInterPlan721\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"ownerOf\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"\",\r\n            \"type\": \"address\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          },\r\n          {\r\n            \"internalType\": \"bytes\",\r\n            \"name\": \"_data\",\r\n            \"type\": \"bytes\"\r\n          }\r\n        ],\r\n        \"name\": \"safeTransferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"operator\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"approved\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"name\": \"setApprovalForAll\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"bytes4\",\r\n            \"name\": \"interfaceId\",\r\n            \"type\": \"bytes4\"\r\n          }\r\n        ],\r\n        \"name\": \"supportsInterface\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"bool\",\r\n            \"name\": \"\",\r\n            \"type\": \"bool\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"tokenURI\",\r\n        \"outputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"from\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"address\",\r\n            \"name\": \"to\",\r\n            \"type\": \"address\"\r\n          },\r\n          {\r\n            \"internalType\": \"uint256\",\r\n            \"name\": \"tokenId\",\r\n            \"type\": \"uint256\"\r\n          }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      }\r\n    ]\r\n}","export default function bytecode()\r\n{\r\n    return \"\"\r\n}","import React, { Component } from 'react';\r\nimport {Button, View} from 'react-native'; \r\n\r\n\r\n\r\nclass HomePage extends Component {\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      \r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n  \r\n      <h1>InterPlanetary 721</h1>\r\n      \r\n      <div class=\"marginButton\">\r\n      <Button\r\n      title=\"Mint an Image\"\r\n      onPress={() => this.props.navigation.navigate('Image')}\r\n      />\r\n      </div>\r\n      <div class=\"marginTitle\"> This website uses the following (works only on in the Goerli testnetwork for the moment):</div>\r\n        <ul>\r\n          <li>Hardhat instead of Truffle</li>\r\n          <li>Ether.js instead of Web3.js</li>\r\n          <li>IPFS (Inter Planetary File System)</li>\r\n          <li>ERC721 contracts</li>\r\n          <li>OpenZeppelin</li>\r\n          <li>OpenSea API</li>\r\n          <li>MetaMask</li>\r\n        </ul>\r\n        <div class=\"marginTitle\"> Previous verisons of this project were not OpenSea or MetaMask compatible:</div>\r\n      <div>Imporant Links:</div>\r\n\r\n        <ul>\r\n          <li><a href=\"https://www.linkedin.com/in/jared-samonte-9b9192157/\">LinkedIn Account</a></li>\r\n          <li><a href=\"https://github.com/jared-v-samonte/InterPlan721\">GitHub Repository</a></li>\r\n          <li><a href=\"https://jared-v-samonte.github.io/IPFS-NFTs-project/\">Previous Version</a></li>\r\n        </ul>\r\n      </View>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default HomePage;","import React, {Component} from 'react';\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport {createStackNavigator} from \"react-navigation-stack\";\r\nimport './App.css';\r\nimport ImageViewer from './ImageViewer.js'\r\n//import VideoViewer from './VideoViewer.js'\r\n//import AudioListener from './AudioListener.js'\r\nimport HomePage from './HomePage.js'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() \r\n  {\r\n    return(\r\n      <AppContainer />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst AppNavigator = createStackNavigator({\r\n  Home: {\r\n    screen: HomePage\r\n  },\r\n  Image: {\r\n    screen: ImageViewer\r\n  }\r\n});\r\n\r\n\r\nconst AppContainer = createAppContainer(AppNavigator);\r\n\r\nexport default App\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker.js';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\r\n\r\n\r\n\r\n\r\nconst root = document.getElementById('root')\r\n\r\nif (root != null) {\r\n  ReactDOM.render((\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n ), root)\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}