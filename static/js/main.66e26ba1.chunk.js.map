{"version":3,"sources":["../node_modules/@cspotcode/source-map-support sync","../node_modules/v8-compile-cache-lib sync","components/ImageViewer.js","components/HomePage.js","components/App.js","serviceWorker.js","index.js","../node_modules/mocha/lib sync","../node_modules/hardhat/internal/core/config sync","../node_modules/ts-node/dist sync","../node_modules/typescript/lib sync","../node_modules/ts-node/dist/transpilers sync","../node_modules/mocha/lib lazy groupOptions: {} namespace object","../node_modules/hardhat/internal/util sync","../node_modules/hardhat/internal/solidity/compiler sync","../node_modules/hardhat/internal/core sync","../node_modules/hardhat/internal/core/providers sync"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","hre","require","ipfs","ipfsClient","host","port","protocol","apiPath","ImageViewer","props","captureFile","event","console","log","state","image","preventDefault","temp","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","file","name","description","symbol","address","uploadFile","bind","a","provider","ethers","providers","Web3Provider","ethereum","send","getContractFactory","contract","add","this","pin","result","path","metaData","meta","deploy","InterPlan721","View","style","flex","alignItems","justifyContent","Button","title","onPress","navigation","navigate","onSubmit","type","accept","onChange","className","placeholder","required","ref","input","value","Component","HomePage","class","href","App","AppContainer","AppNavigator","createStackNavigator","Home","screen","Image","createAppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","root","document","getElementById","ReactDOM","render","basename","process","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"static/js/main.66e26ba1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1066;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1072;","//import NFT from '../artifacts/src/contracts/InterPlan721.sol/InterPlan721.json'\r\nimport React, { Component } from 'react';\r\nimport {Button, View} from 'react-native';\r\nconst hre = require(\"hardhat\");\r\n\r\n//const fs = window.require('fs');\r\n\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({host: 'ipfs.infura.io', port: 5001, protocol: 'https', apiPath: '/api/v0'}) \r\n\r\n\r\n\r\nclass ImageViewer extends Component {\r\n\r\n\r\n  async uploadFile () {\r\n\r\n    const provider = new hre.ethers.providers.Web3Provider(window.ethereum)\r\n    await provider.send(\"eth_requestAccounts\", []);\r\n    //const signer = await ethers.provider.getSigner()\r\n    //const metadata = JSON.parse(fs.readFileSync('../artifacts/src/contracts/InterPlan721.sol/InterPlan721.json').toString());\r\n\r\n    const contract = await hre.ethers.getContractFactory(\"InterPlan721\");\r\n    //const factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, provider)\r\n    //const InterPlan721 = await contract.attach(contractAddress);\r\n    //const contractSigner = InterPlan721.connect(signer);\r\n    \r\n    console.log(\"Submitting file to IPFS...\")\r\n    for await (var result of ipfs.add(this.state.file, { pin: true }))\r\n    {\r\n      console.log('hash ', result.path)\r\n      var metaData = '{ ';\r\n      metaData +=  '\"name\": \"' + this.state.name + '\",';\r\n      metaData +=  '\"description\": ' + this.state.description +'\",';\r\n      metaData +=  '\"symbol\": \"' + this.state.symbol + '\",';\r\n      metaData +=  '\"image\": \"https://ipfs.io/ipfs/' + result.path + '\", ';\r\n      metaData +=  '\"attributes\": [ ... ],'\r\n      metaData += '}';\r\n      for await (var meta of ipfs.add(metaData, { pin: true }))\r\n      {\r\n        const InterPlan721 = await contract.deploy(provider.address, this.state.name, this.state.symbol, this.state.description, meta);\r\n        console.log(\"Contract deployed at:\", InterPlan721.address);\r\n        this.setState({\r\n          address: InterPlan721.address\r\n        })\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  captureFile = event => \r\n  {\r\n    console.log('capturing ', this.state.image)\r\n    event.preventDefault()\r\n    const temp = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(temp)\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({ file: temp })\r\n      console.log('file', temp)\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n  constructor(props) \r\n  {\r\n    super(props)\r\n    this.state = \r\n    {\r\n      name: null,\r\n      description: null,\r\n      symbol: null,\r\n      file: null,\r\n      address: null,\r\n    }\r\n    this.uploadFile = this.uploadFile.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n  \r\n      <h1>InterPlanetary Image</h1>\r\n\r\n      <Button\r\n      title=\"Home Page\"\r\n      onPress={() => this.props.navigation.navigate('Home')}\r\n      />\r\n\r\n\r\n\r\n      <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          this.uploadFile()\r\n        }}>\r\n          &nbsp;\r\n\r\n\r\n          <input \r\n            type='file' \r\n            accept=\".jpg, .png, .jpeg\" \r\n            onChange={this.captureFile}\r\n          />\r\n          <div className=\"form-group mr-sm-2\">\r\n          <h1> </h1>\r\n\r\n          <input   \r\n            type=\"text\"\r\n            className=\"form-control-sm\"\r\n            placeholder=\"Name of NFT\"\r\n            required\r\n            ref={(input) => {this.name = input}}\r\n          />\r\n\r\n\r\n          <div className=\"form-group mr-sm-2\"></div>\r\n          <input    \r\n            type=\"text\"\r\n            className=\"form-control-sm\"\r\n            placeholder=\"Description of NFT\"\r\n            required\r\n            ref={(input) => {this.description = input}}\r\n          />\r\n\r\n          <input     \r\n            type=\"text\"\r\n            className=\"form-control-sm\"\r\n            placeholder=\"Symbol of NFT\"\r\n            required\r\n            ref={(input) => {this.symbol = input}}\r\n          />\r\n\r\n          <div className=\"form-group mr-sm-2\"></div>\r\n          <input\r\n          type='submit'\r\n          className='btn btn-block btn-primary'\r\n          value='MINT'\r\n          />\r\n          </div></form>\r\n\r\n          <div>Contract Address: {this.state.address}</div>\r\n      \r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\nexport default ImageViewer;","import React, { Component } from 'react';\r\nimport {Button, View} from 'react-native'; \r\n\r\n\r\n\r\nclass HomePage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n  \r\n      <h1>InterPlanetary 721s</h1>\r\n      \r\n      <Button\r\n      title=\"Change to Images\"\r\n      onPress={() => this.props.navigation.navigate('Image')}\r\n      />\r\n\r\n\r\n      <div >Currently functioning in the Goerli test network. </div>\r\n\r\n      <div class=\"container\">\r\n      <p>The smart contract does not allow for duplicate hashes, so hashes can only be used once. This is a demonstration of Jared V. Samonte's capabilities in developing in Ethereum, IPFS, Ether.js, the Hardhat framework, OpenZeppelin ERC721 library, and Goerli test network.</p>\r\n      </div>\r\n      <a href=\"https://www.linkedin.com/in/jared-samonte-9b9192157/\">LinkedIn Account</a>\r\n      <a href=\"https://github.com/jared-v-samonte/ERC721-with-Hardhat\">GitHub Repository</a>\r\n\r\n\r\n      </View>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default HomePage;","import React, {Component} from 'react';\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport {createStackNavigator} from \"react-navigation-stack\";\r\nimport './App.css';\r\nimport ImageViewer from './ImageViewer.js'\r\n//import VideoViewer from './VideoViewer.js'\r\n//import AudioListener from './AudioListener.js'\r\nimport HomePage from './HomePage.js'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() \r\n  {\r\n    return(\r\n      <AppContainer />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst AppNavigator = createStackNavigator({\r\n  Home: {\r\n    screen: HomePage\r\n  },\r\n  Image: {\r\n    screen: ImageViewer\r\n  }\r\n});\r\n\r\n\r\nconst AppContainer = createAppContainer(AppNavigator);\r\n\r\nexport default App\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker.js';\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\r\n\r\n\r\n\r\nconst root = document.getElementById('root')\r\n\r\nif (root) {\r\n  ReactDOM.render((\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n ), root)\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 173;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 327;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 356;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 531;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 538;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 550;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 660;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 920;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 957;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 992;"],"sourceRoot":""}